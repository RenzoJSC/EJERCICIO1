# -*- coding: utf-8 -*-
"""Copia de Homework2_CleaningData.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jj261oN10j8ZAKX7zG5OOwaoME8ameYp

<center><img src="https://i.imgur.com/zRrFdsf.png" width="700"></center>

## Exercises:

The CIA has several indicators for world countries:

- See [here](https://www.cia.gov/the-world-factbook/references/guide-to-country-comparisons).

Review the topics related to cleaning discussed in class, and see what may be need to clean this indicator from the CIA:

- [Carbon dioxide emissions](https://www.cia.gov/the-world-factbook/field/carbon-dioxide-emissions/country-comparison).

You  need to make sure you have installed:

* pandas
* html5lib
* lxml
* beautifulsoup4 (or bs4)

You can use **pip show** to verify (for instance, _pip show pandas_). If you have all of them, run this code to get the data:
"""

# read web table into pandas DF
import pandas as pd

ciaLink1='https://www.cia.gov/the-world-factbook/field/carbon-dioxide-emissions/country-comparison'
carbon=pd.read_html(ciaLink1, # link
                        header=0, # where is the header?
                        flavor='bs4')[0] # and which table?

# here it is:
carbon

# also
carbon.info()

# frequency table
carbon['Date of Information'].value_counts()

"""Complete the tasks requested:

1. Keep all the columns but _Rank_.
    * Tip: use [drop](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.drop.html), [loc](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.loc.html), and [iloc](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.iloc.html) for the same purpose (three ways to accomplish the task).
2. Rename the column names for easier understanding.
    * Tip: Use [rename](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.rename.html).
3. Make sure the cells with text does not have neither trailing nor leading spaces.
    * Tip: use [strip](https://pandas.pydata.org/docs/reference/api/pandas.Series.str.strip.html).
4. Detect the presence of symbols in the numeric data that are not numeric or point.
    * Tip: Use [contains](https://pandas.pydata.org/docs/reference/api/pandas.Series.str.contains.html).
5. Make sure there are no spaces as part of the column names.
    * Tip: use [replace](https://pandas.pydata.org/docs/reference/api/pandas.Series.replace.html).
6. Keep only the year value in the column *carbon_date*.
    * Tip: use [extract](https://pandas.pydata.org/docs/reference/api/pandas.Series.str.extract.html).

When all tasks are done, create a folder **data** inside the current folder, and save the cleaned file like this:

"""

# import os

# carbonCleaned.to_csv(os.path.join("data","carbonCleaned.csv"),index=False)

"""- Exercise 2: Scrape the data on [Revenue from forest resources](https://www.cia.gov/the-world-factbook/field/revenue-from-forest-resources/country-comparison).

Complete the same tasks requested in the previous exercise.
When all tasks are done, save the cleaned file inside your **data** folder:
"""

# import os

# forestCleaned.to_csv(os.path.join("data","forestCleaned.csv"),index=False)